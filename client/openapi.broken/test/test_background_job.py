# coding: utf-8

"""
    codebeamer swagger API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.background_job import BackgroundJob

class TestBackgroundJob(unittest.TestCase):
    """BackgroundJob unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BackgroundJob:
        """Test BackgroundJob
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BackgroundJob`
        """
        model = BackgroundJob()
        if include_optional:
            return BackgroundJob(
                background_job_status = 'DRAFT',
                background_job_type = 'RUN_IN_EXCEL',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                description = '',
                finished_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                id = 56,
                status_info = openapi_client.models.abstract_background_job_status_info.AbstractBackgroundJobStatusInfo(
                    progress_percentage = 56, 
                    step_in_progress = '', ),
                steps = [
                    openapi_client.models.background_job_step.BackgroundJobStep(
                        id = 56, 
                        name = '', 
                        result = 'SUCCESSFUL', 
                        result_message = '', 
                        status = 'NEW', )
                    ],
                submitted_by = openapi_client.models.user_reference.UserReference()
            )
        else:
            return BackgroundJob(
        )
        """

    def testBackgroundJob(self):
        """Test BackgroundJob"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
