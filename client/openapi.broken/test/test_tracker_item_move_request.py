# coding: utf-8

"""
    codebeamer swagger API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tracker_item_move_request import TrackerItemMoveRequest

class TestTrackerItemMoveRequest(unittest.TestCase):
    """TrackerItemMoveRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TrackerItemMoveRequest:
        """Test TrackerItemMoveRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TrackerItemMoveRequest`
        """
        model = TrackerItemMoveRequest()
        if include_optional:
            return TrackerItemMoveRequest(
                field_mapping = [
                    openapi_client.models.tracker_item_field_mapping_pair.TrackerItemFieldMappingPair(
                        source_field = openapi_client.models.tracker_item_field_mapping.TrackerItemFieldMapping(
                            id = 0, 
                            name = '', 
                            property = '', 
                            type_name = '', ), 
                        target_field = openapi_client.models.tracker_item_field_mapping.TrackerItemFieldMapping(
                            id = 0, 
                            name = '', 
                            property = '', 
                            type_name = '', ), )
                    ],
                items = [
                    openapi_client.models.tracker_item_reference.TrackerItemReference()
                    ],
                source_tracker = openapi_client.models.tracker_reference.TrackerReference(),
                target_tracker = openapi_client.models.tracker_reference.TrackerReference()
            )
        else:
            return TrackerItemMoveRequest(
                field_mapping = [
                    openapi_client.models.tracker_item_field_mapping_pair.TrackerItemFieldMappingPair(
                        source_field = openapi_client.models.tracker_item_field_mapping.TrackerItemFieldMapping(
                            id = 0, 
                            name = '', 
                            property = '', 
                            type_name = '', ), 
                        target_field = openapi_client.models.tracker_item_field_mapping.TrackerItemFieldMapping(
                            id = 0, 
                            name = '', 
                            property = '', 
                            type_name = '', ), )
                    ],
                source_tracker = openapi_client.models.tracker_reference.TrackerReference(),
                target_tracker = openapi_client.models.tracker_reference.TrackerReference(),
        )
        """

    def testTrackerItemMoveRequest(self):
        """Test TrackerItemMoveRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
