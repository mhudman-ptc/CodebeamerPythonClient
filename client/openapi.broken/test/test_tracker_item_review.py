# coding: utf-8

"""
    codebeamer swagger API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tracker_item_review import TrackerItemReview

class TestTrackerItemReview(unittest.TestCase):
    """TrackerItemReview unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TrackerItemReview:
        """Test TrackerItemReview
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TrackerItemReview`
        """
        model = TrackerItemReview()
        if include_optional:
            return TrackerItemReview(
                config = openapi_client.models.tracker_item_review_config.TrackerItemReviewConfig(
                    required_approvals = 56, 
                    required_rejections = 56, 
                    required_signature = 'NONE', 
                    role_required = True, ),
                result = 'APPROVED',
                reviewers = [
                    openapi_client.models.tracker_item_review_vote.TrackerItemReviewVote(
                        as_role = openapi_client.models.role_reference.RoleReference(), 
                        decision = 'APPROVED', 
                        reviewed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        user = openapi_client.models.user_reference.UserReference(), )
                    ],
                tracker_item = openapi_client.models.tracker_item_revision.TrackerItemRevision(
                    id = 56, 
                    version = 56, )
            )
        else:
            return TrackerItemReview(
        )
        """

    def testTrackerItemReview(self):
        """Test TrackerItemReview"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
