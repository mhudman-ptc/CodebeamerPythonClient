# coding: utf-8

"""
    codebeamer swagger API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.traceability_level_filter import TraceabilityLevelFilter

class TestTraceabilityLevelFilter(unittest.TestCase):
    """TraceabilityLevelFilter unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TraceabilityLevelFilter:
        """Test TraceabilityLevelFilter
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TraceabilityLevelFilter`
        """
        model = TraceabilityLevelFilter()
        if include_optional:
            return TraceabilityLevelFilter(
                cb_ql = '',
                folders_and_information = True,
                history_baseline_id = 56,
                history_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                incoming_association = True,
                incoming_reference = True,
                outgoing_association = True,
                outgoing_reference = True,
                previous_level_items = [
                    openapi_client.models.tracker_item_revision.TrackerItemRevision(
                        id = 56, 
                        version = 56, )
                    ],
                show_test_step_references = True
            )
        else:
            return TraceabilityLevelFilter(
                cb_ql = '',
        )
        """

    def testTraceabilityLevelFilter(self):
        """Test TraceabilityLevelFilter"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
