# coding: utf-8

"""
    codebeamer swagger API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tracker_search_result import TrackerSearchResult

class TestTrackerSearchResult(unittest.TestCase):
    """TrackerSearchResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TrackerSearchResult:
        """Test TrackerSearchResult
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TrackerSearchResult`
        """
        model = TrackerSearchResult()
        if include_optional:
            return TrackerSearchResult(
                page = 56,
                page_size = 56,
                total = 56,
                trackers = [
                    openapi_client.models.tracker.Tracker(
                        available_as_template = True, 
                        color = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_by = openapi_client.models.user_reference.UserReference(), 
                        default_show_ancestor_items = True, 
                        default_show_descendant_items = True, 
                        deleted = True, 
                        description = '', 
                        description_format = 'PlainText', 
                        hidden = True, 
                        id = 0, 
                        key_name = '', 
                        modified_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        modified_by = openapi_client.models.user_reference.UserReference(), 
                        name = '', 
                        only_workflow_can_create_new_referring_item = True, 
                        project = openapi_client.models.project_reference.ProjectReference(), 
                        shared_in_working_set = True, 
                        template_tracker = openapi_client.models.tracker_reference.TrackerReference(), 
                        tracker_field_layout_settings_model = openapi_client.models.tracker_field_layout_settings.TrackerFieldLayoutSettings(
                            default_layout = '', 
                            layouts = [
                                openapi_client.models.field_layout_settings.FieldLayoutSettings(
                                    groups = [
                                        openapi_client.models.field_layout_groups.FieldLayoutGroups(
                                            collapsed = True, 
                                            color = '', 
                                            default = True, 
                                            fields = [
                                                openapi_client.models.layout_field.LayoutField(
                                                    field = '', 
                                                    field_id = 56, 
                                                    width = '', )
                                                ], 
                                            name = '', )
                                        ], 
                                    name = '', 
                                    show_default = True, )
                                ], 
                            status_layout = [
                                openapi_client.models.status_layout.StatusLayout(
                                    layout = '', 
                                    status = '', )
                                ], ), 
                        type = openapi_client.models.tracker_type_reference.TrackerTypeReference(), 
                        using_quick_transitions = True, 
                        using_workflow = True, 
                        version = 56, )
                    ]
            )
        else:
            return TrackerSearchResult(
        )
        """

    def testTrackerSearchResult(self):
        """Test TrackerSearchResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
